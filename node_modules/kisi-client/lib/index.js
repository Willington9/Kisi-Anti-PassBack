"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _axios = _interopRequireDefault(require("axios"));

require("regenerator-runtime/runtime");

var _humps = _interopRequireDefault(require("humps"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var KisiError = /*#__PURE__*/function (_Error) {
  _inherits(KisiError, _Error);

  var _super = _createSuper(KisiError);

  function KisiError(status) {
    var _this;

    var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '000000';
    var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

    _classCallCheck(this, KisiError);

    _this = _super.call(this, 'An error occurred interacting with the Kisi API.');
    _this.status = status;
    _this.code = code;
    _this.reason = reason;
    return _this;
  }

  return KisiError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

var Kisi = /*#__PURE__*/function () {
  function Kisi() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Kisi);

    this.client = _axios.default.create(_objectSpread({
      baseURL: 'https://api.kisi.io/',
      timeout: 5000,
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json'
      }
    }, config));
    this.addDecamelizationRequestInterceptor();
    this.addCamelizationResponseInterceptor();
    this.addPaginationResponseInterceptor();
  }

  _createClass(Kisi, [{
    key: "addDecamelizationRequestInterceptor",
    value: function addDecamelizationRequestInterceptor() {
      this.client.interceptors.request.use(function (config) {
        var newConfig = config;
        newConfig.data = _humps.default.decamelizeKeys(config.data);
        newConfig.params = _humps.default.decamelizeKeys(config.params);
        return newConfig;
      });
    }
  }, {
    key: "addCamelizationResponseInterceptor",
    value: function addCamelizationResponseInterceptor() {
      this.client.interceptors.response.use(function (response) {
        var newResponse = response;
        newResponse.data = _humps.default.camelizeKeys(response.data);
        return response;
      });
    }
  }, {
    key: "addPaginationResponseInterceptor",
    value: function addPaginationResponseInterceptor() {
      this.client.interceptors.response.use(function (response) {
        var newResponse = response;
        var headers = response.headers;
        var collectionRange = headers['x-collection-range'];

        if (collectionRange !== undefined) {
          var rangeAndCount = collectionRange.split('/');
          var collectionCount = Number(rangeAndCount[1]);

          if (rangeAndCount[0] === '*') {
            newResponse.data = {
              pagination: {
                offset: 0,
                limit: 0,
                count: collectionCount
              },
              data: response.data
            };
            return response;
          }

          var rangeStartAndEnd = rangeAndCount[0].split('-');
          var collectionStart = Number(rangeStartAndEnd[0]);
          var collectionEnd = Number(rangeStartAndEnd[1]);
          var collectionLimit = collectionEnd - collectionStart + 1;
          newResponse.data = {
            pagination: {
              offset: collectionStart,
              limit: collectionLimit,
              count: collectionCount
            },
            data: response.data
          };
        }

        return response;
      });
    }
  }, {
    key: "setLoginSecret",
    value: function setLoginSecret(secret) {
      this.client.defaults.headers.common['X-Login-Secret'] = secret;
    }
  }, {
    key: "signUp",
    value: function () {
      var _signUp = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(email, password) {
        var response;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.setLoginSecret(null);
                _context.prev = 1;
                _context.next = 4;
                return this.post('users', {
                  user: {
                    email: email,
                    password: password,
                    termsAndConditions: true
                  }
                });

              case 4:
                response = _context.sent;
                return _context.abrupt("return", response);

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](1);
                return _context.abrupt("return", Kisi.handleError(_context.t0));

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 8]]);
      }));

      function signUp(_x, _x2) {
        return _signUp.apply(this, arguments);
      }

      return signUp;
    }()
  }, {
    key: "signIn",
    value: function () {
      var _signIn = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(email, password) {
        var response;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.setLoginSecret(null);
                _context2.prev = 1;
                _context2.next = 4;
                return this.post('logins', {
                  login: {
                    type: 'device'
                  },
                  user: {
                    email: email,
                    password: password
                  }
                });

              case 4:
                response = _context2.sent;
                this.setLoginSecret(response.secret);
                return _context2.abrupt("return", response);

              case 9:
                _context2.prev = 9;
                _context2.t0 = _context2["catch"](1);
                return _context2.abrupt("return", Kisi.handleError(_context2.t0));

              case 12:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[1, 9]]);
      }));

      function signIn(_x3, _x4) {
        return _signIn.apply(this, arguments);
      }

      return signIn;
    }()
  }, {
    key: "signOut",
    value: function () {
      var _signOut = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var response;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                _context3.next = 3;
                return this.delete('login');

              case 3:
                response = _context3.sent;
                this.setLoginSecret(null);
                return _context3.abrupt("return", response);

              case 8:
                _context3.prev = 8;
                _context3.t0 = _context3["catch"](0);
                return _context3.abrupt("return", Kisi.handleError(_context3.t0));

              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 8]]);
      }));

      function signOut() {
        return _signOut.apply(this, arguments);
      }

      return signOut;
    }()
  }, {
    key: "get",
    value: function () {
      var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(path) {
        var params,
            response,
            _args4 = arguments;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                params = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};
                _context4.prev = 1;
                _context4.next = 4;
                return this.client.get(path, {
                  params: params
                });

              case 4:
                response = _context4.sent;
                return _context4.abrupt("return", response.data);

              case 8:
                _context4.prev = 8;
                _context4.t0 = _context4["catch"](1);
                return _context4.abrupt("return", Kisi.handleError(_context4.t0));

              case 11:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[1, 8]]);
      }));

      function get(_x5) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: "post",
    value: function () {
      var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(path) {
        var data,
            response,
            _args5 = arguments;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                data = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};
                _context5.prev = 1;
                _context5.next = 4;
                return this.client.post(path, data);

              case 4:
                response = _context5.sent;
                return _context5.abrupt("return", response.data);

              case 8:
                _context5.prev = 8;
                _context5.t0 = _context5["catch"](1);
                return _context5.abrupt("return", Kisi.handleError(_context5.t0));

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this, [[1, 8]]);
      }));

      function post(_x6) {
        return _post.apply(this, arguments);
      }

      return post;
    }()
  }, {
    key: "put",
    value: function () {
      var _put = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path) {
        var data,
            response,
            _args6 = arguments;
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                data = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};
                _context6.prev = 1;
                _context6.next = 4;
                return this.client.put(path, data);

              case 4:
                response = _context6.sent;
                return _context6.abrupt("return", response.data);

              case 8:
                _context6.prev = 8;
                _context6.t0 = _context6["catch"](1);
                return _context6.abrupt("return", Kisi.handleError(_context6.t0));

              case 11:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[1, 8]]);
      }));

      function put(_x7) {
        return _put.apply(this, arguments);
      }

      return put;
    }()
  }, {
    key: "delete",
    value: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(path) {
        var params,
            response,
            _args7 = arguments;
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                params = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};
                _context7.prev = 1;
                _context7.next = 4;
                return this.client.delete(path, {
                  params: params
                });

              case 4:
                response = _context7.sent;
                return _context7.abrupt("return", response.data);

              case 8:
                _context7.prev = 8;
                _context7.t0 = _context7["catch"](1);
                return _context7.abrupt("return", Kisi.handleError(_context7.t0));

              case 11:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this, [[1, 8]]);
      }));

      function _delete(_x8) {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }()
  }], [{
    key: "handleError",
    value: function handleError(error) {
      if (error.response) {
        var _error$response = error.response,
            data = _error$response.data,
            status = _error$response.status;

        if (data) {
          var code = data.code || '000000';
          var reason = data.error || data.errors || code;
          throw new KisiError(status, code, reason);
        } else {
          throw new KisiError(status);
        }
      } else {
        throw error;
      }
    }
  }]);

  return Kisi;
}();

var _default = Kisi;
exports.default = _default;
